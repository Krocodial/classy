# Generated by Django 2.0.10 on 2019-01-17 00:32

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='classification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_name', models.CharField(choices=[('UN', 'unclassified'), ('PU', 'public'), ('CO', 'confidential'), ('PA', 'protected a'), ('PB', 'protected b'), ('PC', 'protected c')], max_length=2)),
                ('datasource', models.CharField(max_length=100)),
                ('schema', models.CharField(max_length=100)),
                ('table', models.CharField(max_length=100)),
                ('column', models.CharField(max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('P', 'Pending')], max_length=1)),
                ('masking', models.CharField(max_length=600, null=True)),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='classification_count',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_name', models.CharField(choices=[('UN', 'unclassified'), ('PU', 'public'), ('CO', 'confidential'), ('PA', 'protected a'), ('PB', 'protected b'), ('PC', 'protected c')], max_length=2)),
                ('count', models.BigIntegerField()),
                ('date', models.DateField()),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='classification_exception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classy.classification')),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='classification_logs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('flag', models.SmallIntegerField()),
                ('new_classification', models.CharField(blank=True, choices=[('UN', 'unclassified'), ('PU', 'public'), ('CO', 'confidential'), ('PA', 'protected a'), ('PB', 'protected b'), ('PC', 'protected c')], max_length=2)),
                ('old_classification', models.CharField(blank=True, choices=[('UN', 'unclassified'), ('PU', 'public'), ('CO', 'confidential'), ('PA', 'protected a'), ('PB', 'protected b'), ('PC', 'protected c')], max_length=2)),
                ('state', models.CharField(choices=[('A', 'Active'), ('I', 'Inactive'), ('P', 'Pending')], max_length=1)),
                ('approver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Approver', to=settings.AUTH_USER_MODEL)),
                ('classy', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='classy.classification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Modifier', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='classification_review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classification_name', models.CharField(choices=[('UN', 'unclassified'), ('PU', 'public'), ('CO', 'confidential'), ('PA', 'protected a'), ('PB', 'protected b'), ('PC', 'protected c')], max_length=2)),
                ('flag', models.SmallIntegerField()),
                ('classy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classy.classification')),
            ],
            options={
                'permissions': (('can_review', 'Can review & accept user changes'),),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='classification_review_groups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='completed_task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('verbose_name', models.TextField(blank=True, max_length=255)),
                ('priority', models.SmallIntegerField(default=0, help_text='Higher priority tasks will be executed first')),
                ('run_at', models.DateTimeField()),
                ('queue', models.CharField(choices=[('uploads', 'Uploads'), ('counter', 'Counter')], max_length=7)),
                ('finished_at', models.DateTimeField(auto_now=True)),
                ('error', models.TextField(blank=True, help_text='This will show why the task has failed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='data_authorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, unique=True)),
                ('datasource', models.CharField(blank=True, max_length=100)),
                ('schema', models.CharField(blank=True, max_length=100)),
                ('table', models.CharField(blank=True, max_length=100)),
                ('column', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name': 'Data Authorization',
                'verbose_name_plural': 'Data Authorizations',
            },
        ),
        migrations.CreateModel(
            name='dataset_authorization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('data_authorizations', models.ManyToManyField(blank=True, to='classy.data_authorization', verbose_name='Data Authorization')),
            ],
            options={
                'verbose_name': 'Dataset Authorization',
                'verbose_name_plural': 'Dataset Authorizations',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(blank=True, max_length=30)),
                ('data_authorizations', models.ManyToManyField(blank=True, to='classy.data_authorization', verbose_name='Data Authorizations')),
                ('dataset_authorizations', models.ManyToManyField(blank=True, to='classy.dataset_authorization', verbose_name='Dataset Authorizations')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('verbose_name', models.TextField(blank=True, max_length=255)),
                ('priority', models.SmallIntegerField(default=0, help_text='Higher priority tasks will be executed first')),
                ('run_at', models.DateTimeField(auto_now=True)),
                ('queue', models.CharField(choices=[('uploads', 'Uploads'), ('counter', 'Counter')], max_length=7)),
                ('error', models.TextField(blank=True, help_text='This will show why the task has failed')),
                ('progress', models.FloatField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': (),
                'default_permissions': ('delete', 'view'),
            },
        ),
        migrations.AddField(
            model_name='classification_review',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='classy.classification_review_groups'),
        ),
    ]
