{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "classy-dc"
  },
  "labels": {
	"template": "classy-dc",
	"app": "classy"
  },
  "parameters": [
		{
		  "name": "APP_NAME",
		  "required": true,
		  "value": "classy"
		},
		{
		  "name": "ENV_NAME",
		  "required": true,
		  "value": "-dev"
		},
		{
		  "name": "APP_IMAGE_TAG",
		  "required": true,
		  "value": "NS"
		},
        {
          "name": "APPLICATION_DOMAIN",
          "required": true
        },
		{
		  "name": "SOURCE_REPOSITORY_URL",
		  "required": true,
		  "value": "https://github.com/krocodial/classy.git"
		},	
		{
		  "name": "SOURCE_REPOSITORY_REF",
		  "required": true,
		  "value": "master"
		},
		{
		  "name": "DATABASE_SERVICE_NAME",
		  "displayName": "Database Service Name",
		  "required": true,
		  "value": "postgresql"
		},
		{
		  "name": "DATABASE_NAME",
		  "displayName": "Database Name",
		  "required": true,
		  "value": "default"
		},
		{
		  "name": "DATABASE_ENGINE",
		  "displayName": "Database Engine",
		  "required": true,
		  "description": "Database engine: postgresql, mysql or sqlite (default).",
		  "value": "postgresql"
		},
		{
		  "name": "APP_CONFIG",
		  "displayName": "Application Configuration File Path",
		  "description": "Relative path to Gunicorn configuration file (optional)."
		}
  ],
  "objects": [
          {
            "kind": "ImageStream",
            "apiVersion": "v1",
            "metadata": {
                "name": "${APP_NAME}${ENV_NAME}",
                "creationTimestamp": null,
                "labels": {
                },
                "annotations": {
                    "description": "Keeps track of changes in the application image"
                }
            },
            "spec": {
                "lookupPolicy": {
                    "local": false
                }
            }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APP_NAME}${ENV_NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${APP_NAME}${ENV_NAME}"
        }
      }
    },
	{
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APP_NAME}${ENV_NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
		  "rollingParams": {
			"pre": {
			  "failurePolicy": "Retry",
			  "execNewPod": {
			    "containerName": "${APP_NAME}${ENV_NAME}",
				"command": [
					"/bin/bash",
					"-c",
					"psql -qtAX -c 'select 1'"
				],
				"env": [
					{
					  "name": "PGDATABASE",
					  "value": "${DATABASE_NAME}"
					},
					{
					  "name": "PGUSER",
					  "value": "classy"
					},
					{
					  "name": "PGPASSWORD",
					  "valueFrom": {
						"secretKeyRef": {
						  "name" : "${APP_NAME}${ENV_NAME}",
                          "key" : "database-password"
						}
                      }
					},
					{
					  "name": "PGHOST",
					  "value": "postgresql${ENV_NAME}"
					}
				]
			  }
			}, 
			"post": {
				"failurePolicy": "Retry",
				"execNewPod": {
					"containerName": "${APP_NAME}${ENV_NAME}",
					"command": [
						"/bin/bash",
						"/opt/app-root/src/conf/classy-deploy.sh"
					]
				}
			}
          }
		},
        "triggers": [
		  {
		    "type": "ImageChange",
			"imageChangeParams": {
			  "automatic": false,
			  "containerNames": [
			    "${APP_NAME}${ENV_NAME}"
			  ],
			  "from": {
			    "kind": "ImageStreamTag",
				"name": "${APP_NAME}:${ENV_NAME}"
			  }
			}
		  }
        ],
        "replicas": 1,
        "selector": {
          "name": "${APP_NAME}${ENV_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${APP_NAME}${ENV_NAME}",
            "labels": {
				"name": "${APP_NAME}${ENV_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${APP_NAME}${ENV_NAME}",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 20,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 40,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "DATABASE_ENGINE",
                    "value": "${DATABASE_ENGINE}"
                  },
                  {
                    "name": "DATABASE_NAME",
                    "value": "${DATABASE_NAME}"
                  },
				  {
				    "name": "POSTGRESQL_SERVICE_HOST",
					"value": "postgresql${ENV_NAME}"
				  },
                  {
                    "name": "DATABASE_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${APP_NAME}${ENV_NAME}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${APP_NAME}${ENV_NAME}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "APP_CONFIG",
                    "value": "${APP_CONFIG}"
                  },
                  {
                    "name": "DJANGO_SECRET_KEY",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${APP_NAME}${ENV_NAME}",
                        "key" : "django-secret-key"
                      }
                    }
                  },
				  {
				    "name": "SSO_SERVER",
					"valueFrom": {
					  "secretKeyRef": {
					    "name" : "sso-keycloak",
						"key": "sso-server"
					  }
					}
				  },
				  {
				    "name": "SSO_REALM",
					"valueFrom": {
					  "secretKeyRef": {
					    "name" : "sso-keycloak",
						"key": "sso-realm"
					  }
					}
				  },
				  {
				    "name": "SSO_CLIENT_ID",
					"valueFrom": {
					  "secretKeyRef": {
					    "name" : "sso-keycloak",
						"key": "sso-client"
					  }
					}
				  },
				  {
				    "name": "SSO_CLIENT_SECRET",
					"valueFrom": {
					  "secretKeyRef": {
					    "name" : "sso-keycloak",
						"key": "sso-secret"
					  }
					}
				  },
                  {
                    "name": "REDIRECT_URI",
                    "value": "${APPLICATION_DOMAIN}"
                  }
                ],
                "resources": {
                  "limits": {
				    "cpu": "1",
                    "memory": "4.5Gi"
                  }				  
                }
              }
            ],
			"restartPolicy": "Always",
			"terminationGracePeriodSeconds": 30,
			"dnsPolicy": "ClusterFirst"
          }
        }
      }
	}
   ]
}
