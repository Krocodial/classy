{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "classy",
    "annotations": {
      "openshift.io/display-name": "Classy",
      "description": "A metadata classification repository",
      "tags": "quickstart,python,django,postgresql,nginx",
      "iconClass": "icon-python",
      "openshift.io/long-description": "Configuration for Classy, a metadata classification repository spearheaded by the NRM's Information Security team",
      "openshift.io/provider-display-name": "BCGOV",
      "openshift.io/documentation-url": "https://github.com/Krocodial/openTest",
      "openshift.io/support-url": "https://access.redhat.com",
      "template.openshift.io/bindable": "false"
    }
  },
  "labels": {
      "template": "classy",
      "app": "classy"
  },
  "objects": [
	{
	
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}"
      },
      "stringData" : {
        "database-user" : "${DATABASE_USER}",
        "database-password" : "${DATABASE_PASSWORD}",
        "django-secret-key" : "${DJANGO_SECRET_KEY}"
      }
    },
    {
      "kind": "Secret",
      "apiVersion": "v1",
      "metadata": {
        "name": "sonarqube-secrets"
      },
      "stringData" : {
        "database-user" : "${SONAR_DATABASE_USER}",
        "database-password" : "${SONAR_DATABASE_PASSWORD}",
        "database-admin-password" : "${SONAR_DATABASE_ADMIN_PASSWORD}",
        "sonar-admin-password" : "${SONAR_ADMIN_PASSWORD}"
      }
    },
    {
		"kind": "DeploymentConfig",
		"apiVersion": "v1",
		"metadata": {
			"name": "sonarqube",
			"generation": 1,
			"creationTimestamp": null,
			"labels": {
            "app": "sonarqube"
			}
		},
		"spec": {
			"strategy": {
				"type": "Rolling",
				"rollingParams": {
					"updatePeriodSeconds": 1,
					"intervalSeconds": 1,
					"timeoutSeconds": 600,
					"maxUnavailable": "25%",
					"maxSurge": "25%"
				},
				"resources": {},
				"activeDeadlineSeconds": 21600
			},
			"triggers": [
				{
					"type": "ConfigChange"
				},
				{
					"type": "ImageChange",
					"imageChangeParams": {
						"automatic": true,
						"containerNames": [
							"sonarqube"
						],
						"from": {
							"kind": "ImageStreamTag",
							"namespace": "openshift",
							"name": "sonarqube:6.0"
						}
					}
				}
			],
			"replicas": 1,
			"test": false,
			"selector": {
				"app": "sonarqube",
				"deploymentconfig": "sonarqube"
			},
			"template": {
				"metadata": {
					"creationTimestamp": null,
					"labels": {
						"app": "sonarqube",
						"deploymentconfig": "sonarqube"
					},
					"annotations": {
						"openshift.io/container.sonarqube.image.entrypoint": "[\"./bin/run.sh\"]"
					}
				},
				"spec": {
					"volumes": [
						{
							"name": "sonarqube-extensions",
							"persistentVolumeClaim": {
								"claimName": "sonarqube-data"
							}
						}
					],
					"containers": [
						{
							"name": "sonarqube",
							"image": "openshiftdemos/sonarqube@sha256:90bc4c270d3a9f9923ef0b38f7904cfb9c00e4307d4d853e9341a334e8f29cf0",
							"ports": [
								{
									"containerPort": 9000,
									"protocol": "TCP"
								}
							],
							"env": [
								{
									"name": "SONARQUBE_JDBC_USERNAME",
									"valueFrom": {
										  "secretKeyRef" : {
											"name" : "sonarqube-secrets",
											"key" : "database-user"
										}
									}
								},
								{
									"name": "SONARQUBE_JDBC_URL",
									"value": "jdbc:postgresql://${DATABASE_SERVICE_NAME}/sonarqube"
								},
								{
									"name": "SONARQUBE_JDBC_PASSWORD",
									"valueFrom": {
										  "secretKeyRef" : {
											"name" : "sonarqube-secrets",
											"key" : "database-password"
										}
									}
								},
								{
									"name": "SONARQUBE_ADMINPW",
									"valueFrom": {
										  "secretKeyRef" : {
											"name" : "sonarqube-secrets",
											"key" : "sonar-admin-password"
										}
									}    
								}
							],
							"resources": {
								"limits": {
									"cpu": "1",
									"memory": "4Gi"
								}
							},
							"volumeMounts": [
								{
									"name": "sonarqube-extensions",
									"mountPath": "/opt/sonarqube/extensions"
								}
							],
							"readinessProbe": {
								"httpGet": {
									"path": "/",
									"port": 9000,
									"scheme": "HTTP"
								},
								"timeoutSeconds": 1,
								"periodSeconds": 10,
								"successThreshold": 1,
								"failureThreshold": 3
							},
							"terminationMessagePath": "/dev/termination-log",
							"imagePullPolicy": "IfNotPresent"
						}
					],
					"restartPolicy": "Always",
					"terminationGracePeriodSeconds": 30,
					"dnsPolicy": "ClusterFirst",
					"securityContext": {}
				}
			}
		},
		"status": {
			"latestVersion": 0,
			"observedGeneration": 0,
			"replicas": 0,
			"updatedReplicas": 0,
			"availableReplicas": 0,
			"unavailableReplicas": 0
		}
    },
    {
		"kind": "Service",
		"apiVersion": "v1",
		"metadata": {
			"name": "sonarqube",
			"creationTimestamp": null,
			"labels": {
				"app": "sonarqube"
			}
		},
		"spec": {
			"ports": [
				{
					"name": "9000-tcp",
					"protocol": "TCP",
					"port": 9000,
					"targetPort": 9000
				}
			],
			"selector": {
				"app": "sonarqube",
				"deploymentconfig": "sonarqube"
			},
			"type": "ClusterIP",
			"sessionAffinity": "None"
		},
		"status": {
			"loadBalancer": {}
		}
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "postgresql-sonarqube-pvc"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${DATABASE_VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "sonarqube-data"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "2Gi"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "postgres",
            "protocol": "TCP",
            "port": 5432,
            "targetPort": 5432,
            "nodePort": 0
          }
        ],
        "selector": {
          "app": "${DATABASE_SERVICE_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      },
       "status": {
        "loadBalancer": {}
      }
    },  
    {
        "kind": "DeploymentConfig",
        "apiVersion": "v1",
        "metadata": {
            "name": "${DATABASE_SERVICE_NAME}",
            "generation": 1,
            "creationTimestamp": null,
            "labels": {
                        "app": "${DATABASE_SERVICE_NAME}"
            },          
            "annotations": {
                "description": "Defines how to deploy the database",
                "openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
            }
        },
        "spec": {
            "strategy": {
                "type": "Recreate"              
            },
            "triggers": [
                {
                    "type": "ConfigChange"
                },
                {
                    "type": "ImageChange",
                    "imageChangeParams": {
                        "automatic": true,
                        "containerNames": [
                            "postgres"
                        ],
                        "from": {
                            "kind": "ImageStreamTag",
                            "namespace":  "openshift",
                            "name": "postgres:9.4"
                        }                       
                    }
                }
            ],
            "replicas": 1,
            "test": false,
            "selector": {
                "app": "${DATABASE_SERVICE_NAME}",
                "deploymentconfig": "${DATABASE_SERVICE_NAME}"
            },
                
            "template": {
                "metadata": {
                    "creationTimestamp": null,
                    "labels": {
                        "app": "${DATABASE_SERVICE_NAME}",
                        "deploymentconfig": "${DATABASE_SERVICE_NAME}"
                    },
                    "annotations": {
                        "openshift.io/container.postgresql.image.entrypoint": "[\"container-entrypoint\",\"run-postgresql\"]"
                    }
                },
                "spec": {
                    "volumes": [
                        {
                            "name": "${DATABASE_SERVICE_NAME}-data",
                            "persistentVolumeClaim": {
                                "claimName": "${DATABASE_SERVICE_NAME}-pvc"
                            }
                        }
                    ],
                    "containers": [
                        {
                            "name": "postgres",
                            "image": "registry.access.redhat.com/rhscl/postgresql-94-rhel7",
                            "ports": [
                                {
                                    "containerPort": 5432,
                                    "protocol": "TCP"
                                }
                            ],
                            "env": [
                                {
                                    "name": "POSTGRESQL_DATABASE",
                                    "value": "sonarqube"
                                },
                                {
                                    "name": "POSTGRESQL_PASSWORD",
                                    "valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-password"
                                        }
                                    }                        
                                },
                                {
                                    "name": "POSTGRESQL_ADMIN_PASSWORD",
                                    "valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-admin-password"
                                        }
                                    }                        
                                },
                                {
                                    "name": "POSTGRESQL_USER",
                                    "valueFrom": {
                                      "secretKeyRef" : {
                                        "name" : "sonarqube-secrets",
                                        "key" : "database-user"
                                        }
                                    }                        
                                }
                            ],
                            "readinessProbe": {
                                "timeoutSeconds": 1,
                              "initialDelaySeconds": 15,
                              "exec": {
                                "command": [ "/bin/sh", "-i", "-c", "psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'"]                    
                              }
                            },
                            "livenessProbe": {
                              "timeoutSeconds": 1,
                              "initialDelaySeconds": 30,
                              "tcpSocket": {
                                "port": 5432
                              }
                            },
                            "resources": {},
                            "volumeMounts": [
                                {
                                    "name": "${DATABASE_SERVICE_NAME}-data",
                                    "mountPath": "/var/lib/pgsql/data"
                                }
                            ],
                            "terminationMessagePath": "/dev/termination-log",
                            "imagePullPolicy": "Always"
                        }
                    ],
                    "restartPolicy": "Always",
                    "terminationGracePeriodSeconds": 30,
                    "dnsPolicy": "ClusterFirst",
                    "securityContext": {
                  "capabilities": {},
                  "privileged": false
                }
            },
            "restartPolicy": "Always",
            "dnsPolicy": "ClusterFirst"         
        },      
        "status": {}
        }
    },      
    {
    "kind": "BuildConfig",
		"apiVersion": "v1",
		"metadata": {
			"name": "${APPLICATION_NAME}-pipeline",
			"creationTimestamp": null,
			"labels": {
				"app": "${APPLICATION_NAME}-pipeline",
				"name": "${APPLICATION_NAME}-pipeline",
				"template": "${APPLICATION_NAME}-pipeline"
			}
		},
		"spec": {        
			"runPolicy": "Parallel",
			"source": {
				"type": "Git",
				"git": {
					"uri": "${SOURCE_REPOSITORY_URL}",
					"ref": "master"
				}
			},
			"strategy": {
				"type": "JenkinsPipeline",
				"jenkinsPipelineStrategy": {
					"jenkinsfilePath": "pdf.Jenkinsfile"
				}
			},
			"output": {},
			"resources": {},
			"postCommit": {},
			"nodeSelector": null
		},
		"status": {
			"lastVersion": 0
		}
    },
	
	
	
	
	
	{
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Exposes and load balances the application pods",
          "service.alpha.openshift.io/dependencies": "[{\"name\": \"${CLASSY_DATABASE_SERVICE_NAME}\", \"kind\": \"Service\"}]"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "web",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}"
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}"
        }
      }
    },
    {
      "kind": "ImageStream",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Keeps track of changes in the application image"
        }
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to build the application",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "source": {
          "type": "Git",
          "git": {
            "uri": "${SOURCE_REPOSITORY_URL}",
            "ref": "${SOURCE_REPOSITORY_REF}"
          },
          "contextDir": "${CONTEXT_DIR}"
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${NAMESPACE}",
              "name": "python:${PYTHON_VERSION}"
            },
            "env": [
              {
                  "name": "PIP_INDEX_URL",
                  "value": "${PIP_INDEX_URL}"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${NAME}:latest"
          }
        },
        "triggers": [
          {
            "type": "ImageChange"
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "GitHub",
            "github": {
              "secret": "${GITHUB_WEBHOOK_SECRET}"
            }
          }
        ],
        "postCommit": {
           "script": "./manage.py test"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "description": "Defines how to deploy the application server",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "classy"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${NAME}:latest"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 2,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "classy",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 8080
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 3,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 3,
                  "initialDelaySeconds": 30,
                  "httpGet": {
                    "path": "/health",
                    "port": 8080
                  }
                },
                "env": [
                  {
                    "name": "DATABASE_SERVICE_NAME",
                    "value": "${CLASSY_DATABASE_SERVICE_NAME}"
                  },
                  {
                    "name": "DATABASE_ENGINE",
                    "value": "${DATABASE_ENGINE}"
                  },
                  {
                    "name": "DATABASE_NAME",
                    "value": "${DATABASE_NAME}"
                  },
                  {
                    "name": "DATABASE_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "DATABASE_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "APP_CONFIG",
                    "value": "${APP_CONFIG}"
                  },
                  {
                    "name": "DJANGO_SECRET_KEY",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "django-secret-key"
                      }
                    }
                  }
                ],
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "${CLASSY_DATABASE_SERVICE_NAME}"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${VOLUME_CAPACITY}"
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${CLASSY_DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Exposes the database server"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "postgresql",
            "port": 5432,
            "targetPort": 5432
          }
        ],
        "selector": {
          "name": "${CLASSY_DATABASE_SERVICE_NAME}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${CLASSY_DATABASE_SERVICE_NAME}",
        "annotations": {
          "description": "Defines how to deploy the database",
          "template.alpha.openshift.io/wait-for-ready": "true"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "postgresql"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${NAMESPACE}",
                "name": "postgresql:${POSTGRESQL_VERSION}"
              }
            }
          },
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${CLASSY_DATABASE_SERVICE_NAME}"
        },
        "template": {
          "metadata": {
            "name": "${CLASSY_DATABASE_SERVICE_NAME}",
            "labels": {
              "name": "${CLASSY_DATABASE_SERVICE_NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "${CLASSY_DATABASE_SERVICE_NAME}-data",
                "persistentVolumeClaim": {
                  "claimName": "${CLASSY_DATABASE_SERVICE_NAME}"
                }
              }
            ],
            "containers": [
              {
                "name": "postgresql",
                "image": " ",
                "ports": [
                  {
                    "containerPort": 5432
                  }
                ],
                "env": [
                  {
                    "name": "POSTGRESQL_USER",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-user"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_PASSWORD",
                    "valueFrom": {
                      "secretKeyRef" : {
                        "name" : "${NAME}",
                        "key" : "database-password"
                      }
                    }
                  },
                  {
                    "name": "POSTGRESQL_DATABASE",
                    "value": "${DATABASE_NAME}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "${CLASSY_DATABASE_SERVICE_NAME}-data",
                    "mountPath": "/var/lib/pgsql/data"
                  }
                ],
                "readinessProbe": {
                  "timeoutSeconds": 1,
                  "initialDelaySeconds": 5,
                  "exec": {
                    "command": [ "/usr/libexec/check-container" ]
                  }
                },
                "livenessProbe": {
                  "timeoutSeconds": 10,
                  "initialDelaySeconds": 120,
                  "exec": {
                    "command": [ "/usr/libexec/check-container", "--live" ]
                  }
                },
                "resources": {
                  "limits": {
                    "memory": "${MEMORY_POSTGRESQL_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    }
	
	
	
    
  ],
  "parameters": [
	{
	  "name": "NAME",
	  "displayName": "name of app",
	  "value": "classy",
	  "required": true
	},
	{
	  "name": "NAMESPACE",
	  "displayName": "namespace of app",
	  "value": "openshift",
	  "required": true
    },
	{
      "name": "PYTHON_VERSION",
      "displayName": "Version of Python Image",
      "description": "Version of Python image to be used (3.6 or latest).",
      "value": "3.5",
      "required": true
    },
    {
      "name": "POSTGRESQL_VERSION",
      "displayName": "Version of PostgreSQL Image",
      "description": "Version of PostgreSQL image to be used (10 or latest).",
      "value": "latest",
      "required": true
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "required": true,
      "description": "Maximum amount of memory the Django container can use.",
      "value": "1Gi"
    },
    {
      "name": "MEMORY_POSTGRESQL_LIMIT",
      "displayName": "Memory Limit (PostgreSQL)",
      "required": true,
      "description": "Maximum amount of memory the PostgreSQL container can use.",
      "value": "1Gi"
    },
    {
      "name": "VOLUME_CAPACITY",
      "displayName": "Volume Capacity",
      "description": "Volume space available for data, e.g. 512Mi, 2Gi",
      "value": "2Gi",
      "required": true
    },
    {
      "name": "SOURCE_REPOSITORY_REF",
      "displayName": "Git Reference",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "CONTEXT_DIR",
      "displayName": "Context Directory",
      "description": "Set this to the relative path to your project if it is not in the root of your repository."
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted.",
      "value": ""
    },
    {
      "name": "GITHUB_WEBHOOK_SECRET",
      "displayName": "GitHub Webhook Secret",
      "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "CLASSY_DATABASE_SERVICE_NAME",
      "displayName": "Database Service Name",
      "required": true,
      "value": "postgresql"
    },
    {
      "name": "DATABASE_ENGINE",
      "displayName": "Database Engine",
      "required": true,
      "description": "Database engine: postgresql, mysql or sqlite (default).",
      "value": "postgresql"
    },
    {
      "name": "DATABASE_NAME",
      "displayName": "Database Name",
      "required": true,
      "value": "default"
    },
    {
      "name": "DATABASE_USER",
      "displayName": "Database Username",
      "required": true,
      "value": "django"
    },
    {
      "name": "DATABASE_PASSWORD",
      "displayName": "Database User Password",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "APP_CONFIG",
      "displayName": "Application Configuration File Path",
      "description": "Relative path to Gunicorn configuration file (optional)."
    },
    {
      "name": "DJANGO_SECRET_KEY",
      "displayName": "Django Secret Key",
      "description": "Set this to a long random string.",
      "generate": "expression",
      "from": "[\\w]{50}"
    },
    {
      "name": "PIP_INDEX_URL",
      "displayName": "Custom PyPi Index URL",
      "description": "The custom PyPi index URL",
      "value": ""
    },
        {
      "name": "APPLICATION_NAME",
      "displayName": "Application Name",
      "description": "The name given to the application",
      "required": true,
      "value": "classy"
    },
    {
      "name": "BUILD_PROJECT",
      "displayName": "Build Project",
      "description": "The openshift project where builds and target images are stored.",
      "required": true,
      "value": "classy-dev"
    },    
    {
      "name": "BACKEND_NAME",
      "displayName": "Backend Name",
      "description": "The name assigned to all of the backend objects defined in this template.",
      "required": true,
      "value": "classy"
    },
    {
      "name": "RPROXY_NAME",
      "displayName": "Reverse Proxy Name (SiteMinder)",
      "description": "The name assigned to the objects used as a SiteMinder entry point (or Reverse Proxy).  Typcially this is an NGINX instance.",
      "required": false,
      "value": ""
    },
    {
      "name": "DEPLOYMENT_TYPE",
      "displayName": "Deployment Type",
      "description": "The name assigned to the imagestreams defined in this template.",
      "required": true,
      "value": "latest"
    },
    {
      "name": "SOURCE_REPOSITORY_URL",
      "displayName": "Source Repository",
      "description": "The source repository to use for the builds.",
      "required": true,
      "value": "https://github.com/Krocodial/classy.git"
    },  
    {
      "name": "GIT_REFERENCE",
      "displayName": "Git Reference",
      "description": "Optional branch, tag, or commit.",
      "required": true,
      "value": "master"
    },
    {
      "name": "EDITOR_NAME",
      "displayName": "Swagger Editor Name",
      "description": "The name assigned to all of the swagger editor objects defined in this template.",
      "required": true,
      "value": "editor"
    },
    {
      "name": "MOCKSERVER_NAME",
      "displayName": "Mock Server Name",
      "description": "The name assigned to all of the mock server objects defined in this template.",
      "required": true,
      "value": "mock"
    },
    {
      "name": "SCHEMASPY_NAME",
      "displayName": "Schema Spy Name",
      "description": "The name assigned to all of the schema spy objects defined in this template.",
      "required": true,
      "value": "schema-spy"
    },
    {
      "name": "SONAR_DATABASE_USER",
      "displayName": "DB Username",
      "description": "Username for Sonar Database user that will be used for accessing the database.",
      "generate": "expression",
      "from": "user[A-Z0-9]{3}"
    },
    {
      "name": "SONAR_DATABASE_PASSWORD",
      "displayName": "Database Password",
      "description": "Password for the Sonar Database user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "SONAR_DATABASE_ADMIN_PASSWORD",
      "displayName": "Database Admin Password",
      "description": "Password for the Admin Database user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "SONAR_ADMIN_PASSWORD",
      "displayName": "Sonar admin password",
      "description": "Password for the Sonar admin user.",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{16}"
    },
    {
      "name": "DATABASE_VOLUME_CAPACITY",
      "displayName": "Database volume capacity",
      "description": "Size of the database used for SonarQube",
      "value": "5Gi"
    },
    {
      "name": "DATABASE_SERVICE_NAME",
      "displayName": "Database service name",
      "description": "Name of the database service",
      "value": "postgresql-sonarqube"
    }

  ]
}
